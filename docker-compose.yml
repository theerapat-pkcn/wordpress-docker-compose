version: '3'

networks:
  apps-network:
    driver: bridge

volumes:
  db_data:
  certbot-etc:
  certbot-webroot:

services:

  db:
    image: mysql:latest # https://hub.docker.com/_/mysql/ - or mariadb https://hub.docker.com/_/mariadb
    ports:
      - ${IP}:3306:3306 # change ip if required
    command: [
        '--default_authentication_plugin=mysql_native_password',
        '--character-set-server=utf8mb4',
        '--collation-server=utf8mb4_unicode_ci'
    ]
    volumes:
      - ./wp-data:/docker-entrypoint-initdb.d
      - db_data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: "${DB_NAME}"
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
    networks:
      - apps-network

  wp:
    depends_on:
      - db
    container_name: wp
    image: wordpress:latest # https://hub.docker.com/_/wordpress/
    # ports:
    #   - 127.0.0.1:8000:80 # change ip if required
    volumes:
      - ./wp-config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html # Full wordpress project
      #- ./plugin-name/trunk/:/var/www/html/wp-content/plugins/plugin-name # Plugin development
      #- ./theme-name/trunk/:/var/www/html/wp-content/themes/theme-name # Theme development
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: "${DB_NAME}"
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: "${DB_ROOT_PASSWORD}"
    networks:
      - apps-network

  wpcli:
    depends_on:
      - db
      - wp
    image: wordpress:cli
    volumes:
      - ./wp-config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
      - ./wp-app:/var/www/html
    networks:
      - apps-network

  filebrowser:
    image: filebrowser/filebrowser:s6
    container_name: filebrowser
    restart: always
    networks:
      - apps-network
    volumes:
      - ./tour360-data/:/srv/360files/
      #(v) please touch/create this file before running container
      - ./filebrowser.db:/database/filebrowser.db
    environment:
      - PUID=1000
      - PGID=1000

  reverse_proxy:
    depends_on:
      - wp
    image: nginx:1.23.3
    container_name: reverse_proxy
    restart: always
    ports:
      - "80:80"
      - "443:443" 
    env_file:
      #(v) env to use for envsubt of templates
      - ./nginx/env/prod.env
    volumes:
      #--- nginx configs 
      - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/templates/:/etc/nginx/templates/
      - ./logs/nginx/:/var/log/nginx/
      #--- certbot
      - certbot-etc:/etc/letsencrypt/:ro
      - certbot-webroot:/var/www/certbot/:ro
      #--- tour360
      - ./tour360-data/:/vol/360files/
    networks:
      - apps-network

  # certbot:
  #   depends_on:
  #     - reverse_proxy
  #   image: certbot/certbot:v1.32.2
  #   container_name: certbot
  #   volumes:
  #     - certbot-etc:/etc/letsencrypt/:rw
  #     - certbot-webroot:/var/www/certbot/:rw
  #   # command: certonly --email theerapat.pkcn@gmail.com --agree-tos --no-eff-email --staging --webroot --webroot-path /var/www/certbot/ -d tour360.cealect.com -d files.cealect.com
  #   command: certonly --email theerapat.pkcn@gmail.com --agree-tos --no-eff-email --force-renewal --webroot --webroot-path /var/www/certbot/ -d tour360.cealect.com -d files.cealect.com


